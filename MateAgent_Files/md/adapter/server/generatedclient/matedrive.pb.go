// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.5.1
// source: matedrive.proto

package mdpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatedriveSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName   string        `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	OperationId  string        `protobuf:"bytes,2,opt,name=operationId,proto3" json:"operationId,omitempty"`
	MatedriveReq []*Dictionary `protobuf:"bytes,3,rep,name=matedriveReq,proto3" json:"matedriveReq,omitempty"`
	Version      string        `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MatedriveSessionReq) Reset() {
	*x = MatedriveSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matedrive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatedriveSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatedriveSessionReq) ProtoMessage() {}

func (x *MatedriveSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_matedrive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatedriveSessionReq.ProtoReflect.Descriptor instead.
func (*MatedriveSessionReq) Descriptor() ([]byte, []int) {
	return file_matedrive_proto_rawDescGZIP(), []int{0}
}

func (x *MatedriveSessionReq) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *MatedriveSessionReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *MatedriveSessionReq) GetMatedriveReq() []*Dictionary {
	if x != nil {
		return x.MatedriveReq
	}
	return nil
}

func (x *MatedriveSessionReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MatedriveSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string      `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status     bool        `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Set        string      `protobuf:"bytes,3,opt,name=set,proto3" json:"set,omitempty"`
	LogMessage string      `protobuf:"bytes,4,opt,name=logMessage,proto3" json:"logMessage,omitempty"`
	DataString string      `protobuf:"bytes,5,opt,name=dataString,proto3" json:"dataString,omitempty"`
	Data       *Dictionary `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MatedriveSessionResp) Reset() {
	*x = MatedriveSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matedrive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatedriveSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatedriveSessionResp) ProtoMessage() {}

func (x *MatedriveSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_matedrive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatedriveSessionResp.ProtoReflect.Descriptor instead.
func (*MatedriveSessionResp) Descriptor() ([]byte, []int) {
	return file_matedrive_proto_rawDescGZIP(), []int{1}
}

func (x *MatedriveSessionResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MatedriveSessionResp) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *MatedriveSessionResp) GetSet() string {
	if x != nil {
		return x.Set
	}
	return ""
}

func (x *MatedriveSessionResp) GetLogMessage() string {
	if x != nil {
		return x.LogMessage
	}
	return ""
}

func (x *MatedriveSessionResp) GetDataString() string {
	if x != nil {
		return x.DataString
	}
	return ""
}

func (x *MatedriveSessionResp) GetData() *Dictionary {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReqResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReqResponse) Reset() {
	*x = ReqResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matedrive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqResponse) ProtoMessage() {}

func (x *ReqResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matedrive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqResponse.ProtoReflect.Descriptor instead.
func (*ReqResponse) Descriptor() ([]byte, []int) {
	return file_matedrive_proto_rawDescGZIP(), []int{2}
}

func (x *ReqResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *ReqResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Dictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key             string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value           string            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ByteValue       []byte            `protobuf:"bytes,3,opt,name=byteValue,proto3" json:"byteValue,omitempty"`
	ListValue       []string          `protobuf:"bytes,4,rep,name=listValue,proto3" json:"listValue,omitempty"`
	DictionaryValue []*ListDictionary `protobuf:"bytes,5,rep,name=dictionaryValue,proto3" json:"dictionaryValue,omitempty"`
}

func (x *Dictionary) Reset() {
	*x = Dictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matedrive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dictionary) ProtoMessage() {}

func (x *Dictionary) ProtoReflect() protoreflect.Message {
	mi := &file_matedrive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dictionary.ProtoReflect.Descriptor instead.
func (*Dictionary) Descriptor() ([]byte, []int) {
	return file_matedrive_proto_rawDescGZIP(), []int{3}
}

func (x *Dictionary) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Dictionary) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Dictionary) GetByteValue() []byte {
	if x != nil {
		return x.ByteValue
	}
	return nil
}

func (x *Dictionary) GetListValue() []string {
	if x != nil {
		return x.ListValue
	}
	return nil
}

func (x *Dictionary) GetDictionaryValue() []*ListDictionary {
	if x != nil {
		return x.DictionaryValue
	}
	return nil
}

type ListDictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ListDictionary) Reset() {
	*x = ListDictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matedrive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictionary) ProtoMessage() {}

func (x *ListDictionary) ProtoReflect() protoreflect.Message {
	mi := &file_matedrive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictionary.ProtoReflect.Descriptor instead.
func (*ListDictionary) Descriptor() ([]byte, []int) {
	return file_matedrive_proto_rawDescGZIP(), []int{4}
}

func (x *ListDictionary) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListDictionary) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_matedrive_proto protoreflect.FileDescriptor

var file_matedrive_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x13,
	0x4d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x4d, 0x61,
	0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x3d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xc4, 0x01, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x32, 0x8b, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x6d, 0x64, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_matedrive_proto_rawDescOnce sync.Once
	file_matedrive_proto_rawDescData = file_matedrive_proto_rawDesc
)

func file_matedrive_proto_rawDescGZIP() []byte {
	file_matedrive_proto_rawDescOnce.Do(func() {
		file_matedrive_proto_rawDescData = protoimpl.X.CompressGZIP(file_matedrive_proto_rawDescData)
	})
	return file_matedrive_proto_rawDescData
}

var file_matedrive_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_matedrive_proto_goTypes = []interface{}{
	(*MatedriveSessionReq)(nil),  // 0: matedrivegeneratedclient.MatedriveSessionReq
	(*MatedriveSessionResp)(nil), // 1: matedrivegeneratedclient.MatedriveSessionResp
	(*ReqResponse)(nil),          // 2: matedrivegeneratedclient.ReqResponse
	(*Dictionary)(nil),           // 3: matedrivegeneratedclient.Dictionary
	(*ListDictionary)(nil),       // 4: matedrivegeneratedclient.ListDictionary
}
var file_matedrive_proto_depIdxs = []int32{
	3, // 0: matedrivegeneratedclient.MatedriveSessionReq.matedriveReq:type_name -> matedrivegeneratedclient.Dictionary
	3, // 1: matedrivegeneratedclient.MatedriveSessionResp.data:type_name -> matedrivegeneratedclient.Dictionary
	4, // 2: matedrivegeneratedclient.Dictionary.dictionaryValue:type_name -> matedrivegeneratedclient.ListDictionary
	0, // 3: matedrivegeneratedclient.MatedriveService.MatedriveSession:input_type -> matedrivegeneratedclient.MatedriveSessionReq
	1, // 4: matedrivegeneratedclient.MatedriveService.MatedriveSession:output_type -> matedrivegeneratedclient.MatedriveSessionResp
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_matedrive_proto_init() }
func file_matedrive_proto_init() {
	if File_matedrive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_matedrive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatedriveSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matedrive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatedriveSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matedrive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matedrive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matedrive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matedrive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matedrive_proto_goTypes,
		DependencyIndexes: file_matedrive_proto_depIdxs,
		MessageInfos:      file_matedrive_proto_msgTypes,
	}.Build()
	File_matedrive_proto = out.File
	file_matedrive_proto_rawDesc = nil
	file_matedrive_proto_goTypes = nil
	file_matedrive_proto_depIdxs = nil
}
